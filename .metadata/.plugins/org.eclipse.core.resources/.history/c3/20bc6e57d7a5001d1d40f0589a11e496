package com.something.service.serviceimpl;

import java.io.FileOutputStream;
import java.io.IOException;
import java.security.SecureRandom;

import org.apache.commons.codec.binary.Base32;
import org.apache.commons.codec.binary.Hex;
import org.springframework.stereotype.Service;

import com.google.zxing.BarcodeFormat;
import com.google.zxing.MultiFormatWriter;
import com.google.zxing.WriterException;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;
import com.something.service.AuthenticatorService;

import de.taimos.totp.TOTP;

@Service
public class AuthenticatorServiceImpl implements AuthenticatorService{

	@Override
	public String generateSecretKey() {
		// TODO Auto-generated method stub
		SecureRandom random = new SecureRandom();
        byte[] bytes = new byte[20];
        random.nextBytes(bytes);
        Base32 base32 = new Base32();
        return base32.encodeToString(bytes);
	}

	@Override
	public String getTOTPCode(String secretKey) {
		// TODO Auto-generated method stub
		Base32 base32 = new Base32();
        byte[] bytes = base32.decode(secretKey);
        String hexKey = Hex.encodeHexString(bytes);
        return TOTP.getOTP(hexKey);
	}

	@Override
	public void createQRCode(String barCodeData, String filePath, int height, int width)
			throws WriterException, IOException {
		// TODO Auto-generated method stub
		BitMatrix matrix = new MultiFormatWriter().encode(barCodeData, BarcodeFormat.QR_CODE,
                width, height);
        try (FileOutputStream out = new FileOutputStream(filePath)) {
            MatrixToImageWriter.writeToStream(matrix, "png", out);
        }
	}

}
